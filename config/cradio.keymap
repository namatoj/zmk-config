// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&caps_word { continue-list = <UNDERSCORE BACKSPACE DELETE SEMICOLON>; };

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    combos {
        compatible = "zmk,combos";

        top_left_tab {
            bindings = <&kp TAB>;
            key-positions = <0 1>;
        };

        top_right_backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <8 9>;
        };

        tab2 {
            bindings = <&kp TAB>;
            key-positions = <2 3>;
        };

        esc2 {
            bindings = <&kp ESCAPE>;
            key-positions = <10 11>;
        };

        back2 {
            bindings = <&kp BACKSPACE>;
            key-positions = <6 7>;
        };

        alt-gr {
            bindings = <&sk RIGHT_ALT>;
            key-positions = <18 17>;
        };

        mid-esc {
            bindings = <&kp ESC>;
            key-positions = <13 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W       &kp E        &kp R           &kp T          &kp Y        &kp U            &kp I        &kp O            &kp P
&ht LSHIFT A  &ht LALT S  &ht LCTRL D  &ht LEFT_GUI F  &kp G          &kp H        &ht RGUI J       &ht RCTRL K  &ht RIGHT_ALT L  &ht RSHFT SEMI
&kp Z         &kp X       &kp C        &kp V           &kp B          &kp N        &kp M            &kp COMMA    &kp DOT          &kp FSLH
                                       &lt 2 ESCAPE    &lt 1 SPACE    &lt 2 ENTER  &lt 1 BACKSPACE
            >;
        };

        right_layer {
            bindings = <
&kp NUMBER_1       &kp NUMBER_2      &kp NUMBER_3                &kp NUMBER_4            &kp N5       &kp NUMBER_6       &kp N7               &kp N8                   &kp N9                      &kp N0
&ht LSHIFT ESCAPE  &ht LEFT_ALT TAB  &ht LEFT_CONTROL BACKSPACE  &ht LEFT_GUI BACKSLASH  &kp GRAVE    &kp SINGLE_QUOTE   &ht RIGHT_GUI MINUS  &ht RIGHT_CONTROL EQUAL  &ht RIGHT_ALT LEFT_BRACKET  &ht RSHFT RIGHT_BRACKET
&caps_word         &key_repeat       &sk GLOBE                   &kp PIPE                &kp TILDE    &kp DOUBLE_QUOTES  &kp UNDER            &kp PLUS                 &kp LEFT_BRACE              &kp RIGHT_BRACE
                                                                 &trans                  &trans       &trans             &trans
            >;
        };

        left_layer {
            bindings = <
&kp EXCLAMATION  &kp AT_SIGN       &kp HASH             &kp DOLLAR       &kp PERCENT    &kp CARET  &kp AMPS  &kp ASTRK      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&ht LSHFT F1     &ht RIGHT_ALT F2  &ht LEFT_CONTROL F3  &ht LEFT_GUI F4  &kp F5         &kp F6     &kp LEFT  &kp DOWN       &kp UP_ARROW          &kp RIGHT
&kp F7           &kp F8            &kp F9               &kp F10          &kp F11        &kp F12    &kp HOME  &kp PAGE_DOWN  &kp PAGE_UP           &kp END
                                                        &trans           &trans         &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                             &trans      &trans          &trans  &trans
            >;
        };
    };
};
